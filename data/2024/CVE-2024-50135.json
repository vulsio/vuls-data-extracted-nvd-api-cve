{
	"id": "CVE-2024-50135",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-50135",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nnvme-pci: fix race condition between reset and nvme_dev_disable()\n\nnvme_dev_disable() modifies the dev->online_queues field, therefore\nnvme_pci_update_nr_queues() should avoid racing against it, otherwise\nwe could end up passing invalid values to blk_mq_update_nr_hw_queues().\n\n WARNING: CPU: 39 PID: 61303 at drivers/pci/msi/api.c:347\n          pci_irq_get_affinity+0x187/0x210\n Workqueue: nvme-reset-wq nvme_reset_work [nvme]\n RIP: 0010:pci_irq_get_affinity+0x187/0x210\n Call Trace:\n  <TASK>\n  ? blk_mq_pci_map_queues+0x87/0x3c0\n  ? pci_irq_get_affinity+0x187/0x210\n  blk_mq_pci_map_queues+0x87/0x3c0\n  nvme_pci_map_queues+0x189/0x460 [nvme]\n  blk_mq_update_nr_hw_queues+0x2a/0x40\n  nvme_reset_work+0x1be/0x2a0 [nvme]\n\nFix the bug by locking the shutdown_lock mutex before using\ndev->online_queues. Give up if nvme_dev_disable() is running or if\nit has been executed already.",
				"references": [
					{
						"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
						"url": "https://git.kernel.org/stable/c/26bc0a81f64ce00fc4342c38eeb2eddaad084dd2"
					},
					{
						"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
						"url": "https://git.kernel.org/stable/c/4ed32cc0939b64e3d7b48c8c0d63ea038775f304"
					},
					{
						"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
						"url": "https://git.kernel.org/stable/c/b33e49a5f254474b33ce98fd45dd0ffdc247a0be"
					},
					{
						"source": "nvd.nist.gov",
						"url": "https://nvd.nist.gov/vuln/detail/CVE-2024-50135"
					}
				],
				"published": "2024-11-05T18:15:16.153Z",
				"modified": "2024-11-06T18:17:17.287Z"
			},
			"ecosystems": [
				"cpe"
			]
		}
	],
	"data_source": {
		"id": "nvd-api-cve",
		"raws": [
			"vuls-data-raw-nvd-api-cve/2024/CVE-2024-50135.json"
		]
	}
}
