{
	"id": "CVE-2024-32481",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-32481",
				"description": "Vyper is a pythonic Smart Contract Language for the Ethereum virtual machine. Starting in version 0.3.8 and prior to version 0.4.0b1, when looping over a `range` of the form `range(start, start + N)`, if `start` is negative, the execution will always revert. This issue is caused by an incorrect assertion inserted by the code generation of the range `stmt.parse_For_range()`. The issue arises when `start` is signed, instead of using `sle`, `le` is used and `start` is interpreted as an unsigned integer for the comparison. If it is a negative number, its 255th bit is set to `1` and is hence interpreted as a very large unsigned integer making the assertion always fail. Any contract having a `range(start, start + N)` where `start` is a signed integer with the possibility for `start` to be negative is affected. If a call goes through the loop while supplying a negative `start` the execution will revert. Version 0.4.0b1 fixes the issue.",
				"severity": [
					{
						"type": "cvss_v31",
						"source": "security-advisories@github.com",
						"cvss_v31": {
							"vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
							"base_score": 5.3,
							"base_severity": "MEDIUM",
							"temporal_score": 5.3,
							"temporal_severity": "MEDIUM",
							"environmental_score": 5.3,
							"environmental_severity": "MEDIUM"
						}
					}
				],
				"cwe": [
					{
						"source": "security-advisories@github.com",
						"cwe": [
							"CWE-681"
						]
					}
				],
				"references": [
					{
						"source": "af854a3a-2127-422b-91ae-364da2661108",
						"url": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287"
					},
					{
						"source": "af854a3a-2127-422b-91ae-364da2661108",
						"url": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868"
					},
					{
						"source": "af854a3a-2127-422b-91ae-364da2661108",
						"url": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5"
					},
					{
						"source": "af854a3a-2127-422b-91ae-364da2661108",
						"url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj"
					},
					{
						"source": "nvd.nist.gov",
						"url": "https://nvd.nist.gov/vuln/detail/CVE-2024-32481"
					},
					{
						"source": "security-advisories@github.com",
						"url": "https://github.com/vyperlang/vyper/blob/9136169468f317a53b4e7448389aa315f90b95ba/vyper/codegen/stmt.py#L286-L287"
					},
					{
						"source": "security-advisories@github.com",
						"url": "https://github.com/vyperlang/vyper/commit/3de1415ee77a9244eb04bdb695e249d3ec9ed868"
					},
					{
						"source": "security-advisories@github.com",
						"url": "https://github.com/vyperlang/vyper/commit/5319cfbe14951e007ccdb323257e5ada869b35d5"
					},
					{
						"source": "security-advisories@github.com",
						"url": "https://github.com/vyperlang/vyper/security/advisories/GHSA-ppx5-q359-pvwj"
					}
				],
				"published": "2024-04-25T17:15:50.273Z",
				"modified": "2024-11-21T09:15:00.013Z"
			},
			"segments": [
				{
					"ecosystem": "cpe"
				}
			]
		}
	],
	"data_source": {
		"id": "nvd-api-cve",
		"raws": [
			"vuls-data-raw-nvd-api-cve/2024/CVE-2024-32481.json"
		]
	}
}
