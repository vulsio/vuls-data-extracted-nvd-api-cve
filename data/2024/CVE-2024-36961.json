{
	"id": "CVE-2024-36961",
	"vulnerabilities": [
		{
			"content": {
				"id": "CVE-2024-36961",
				"description": "In the Linux kernel, the following vulnerability has been resolved:\n\nthermal/debugfs: Fix two locking issues with thermal zone debug\n\nWith the current thermal zone locking arrangement in the debugfs code,\nuser space can open the \"mitigations\" file for a thermal zone before\nthe zone's debugfs pointer is set which will result in a NULL pointer\ndereference in tze_seq_start().\n\nMoreover, thermal_debug_tz_remove() is not called under the thermal\nzone lock, so it can run in parallel with the other functions accessing\nthe thermal zone's struct thermal_debugfs object.  Then, it may clear\ntz->debugfs after one of those functions has checked it and the\nstruct thermal_debugfs object may be freed prematurely.\n\nTo address the first problem, pass a pointer to the thermal zone's\nstruct thermal_debugfs object to debugfs_create_file() in\nthermal_debug_tz_add() and make tze_seq_start(), tze_seq_next(),\ntze_seq_stop(), and tze_seq_show() retrieve it from s->private\ninstead of a pointer to the thermal zone object.  This will ensure\nthat tz_debugfs will be valid across the \"mitigations\" file accesses\nuntil thermal_debugfs_remove_id() called by thermal_debug_tz_remove()\nremoves that file.\n\nTo address the second problem, use tz->lock in thermal_debug_tz_remove()\naround the tz->debugfs value check (in case the same thermal zone is\nremoved at the same time in two different threads) and its reset to NULL.\n\nCc :6.8+ <stable@vger.kernel.org> # 6.8+",
				"references": [
					{
						"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
						"url": "https://git.kernel.org/stable/c/6c57bdd0505422d5ccd2df541d993aec978c842e"
					},
					{
						"source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
						"url": "https://git.kernel.org/stable/c/c7f7c37271787a7f77d7eedc132b0b419a76b4c8"
					},
					{
						"source": "nvd.nist.gov",
						"url": "https://nvd.nist.gov/vuln/detail/CVE-2024-36961"
					}
				],
				"published": "2024-06-03T08:15:09.66Z",
				"modified": "2024-06-03T14:46:24.25Z"
			},
			"ecosystems": [
				"cpe"
			]
		}
	],
	"data_source": {
		"id": "nvd-api-cve",
		"raws": [
			"vuls-data-raw-nvd-api-cve/2024/CVE-2024-36961.json"
		]
	}
}
